@use 'sass:math';
@import '../style/base.scss';

// #variables
:root,
page {
  --sar-loading-icon-width: 20px;
  --sar-loading-icon-height: 20px;
  --sar-loading-icon-color: var(--sar-tertiary-color);

  --sar-loading-circular-item-border-width: 3px;
  --sar-loading-circular-item-animation-duration: 1.2s;

  --sar-loading-clock-animation-duration: 0.8s;
  --sar-loading-scale-width: 2px;
  --sar-loading-scale-height: 25%;
  --sar-loading-scale-border-radius: 40%;

  --sar-loading-text-margin-left: 0.5em;
  --sar-loading-text-vertical-margin-top: 0.5em;
  --sar-loading-text-font-size: var(--sar-text-base);
  --sar-loading-text-color: var(--sar-tertiary-color);
}
// #endvariables

@include bem(loading) {
  @include b() {
    display: inline-flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
  }

  @include m(vertical) {
    flex-direction: column;
  }

  @include e(icon) {
    position: relative;
    box-sizing: border-box;
    width: var(--sar-loading-icon-width);
    height: var(--sar-loading-icon-height);
    color: var(--sar-loading-icon-color);
  }

  @include e(text) {
    margin-left: var(--sar-loading-text-margin-left);
    font-size: var(--sar-loading-text-font-size);
    color: var(--sar-loading-text-color);

    @include m(vertical) {
      margin-left: 0;
      margin-top: var(--sar-loading-text-vertical-margin-top);
    }
  }

  @include e(circular-item) {
    position: absolute;
    width: 100%;
    height: 100%;
    animation: #{bem-ns(loading-rotate)} var(
        --sar-loading-circular-item-animation-duration
      ) cubic-bezier(0.5, 0, 0.5, 1) infinite;

    &::after {
      content: '';
      box-sizing: border-box;
      display: flex;
      width: 200%;
      height: 200%;
      border-style: solid;
      border-width: var(--sar-loading-circular-item-border-width);
      border-color: currentColor transparent transparent transparent;
      border-radius: 50%;
      transform: scale(0.5);
      transform-origin: 0 0;
    }

    @include m(1) {
      animation-delay: -0.45s;
    }

    @include m(2) {
      animation-delay: -0.3s;
    }

    @include m(3) {
      animation-delay: -0.15s;
    }
  }

  @include e(clock) {
    animation: #{bem-ns(loading-rotate)} var(
        --sar-loading-clock-animation-duration
      ) steps(#{$sar-loading-scale-number}) infinite;
  }

  @include e(scale) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    &:before {
      display: flex;
      width: var(--sar-loading-scale-width);
      height: var(--sar-loading-scale-height);
      margin: 0 auto;
      border-radius: var(--sar-loading-scale-border-radius);
      background-color: currentColor;
      content: '';
    }

    @for $i from 1 through $sar-loading-scale-number {
      @include m($i) {
        opacity: tofixed(
          1 - math.div(1, $sar-loading-scale-number) * ($i - 1),
          6
        );
        transform: rotate(#{math.div(360, $sar-loading-scale-number) * $i}deg);
      }
    }
  }
}

@keyframes #{bem-ns(loading-rotate)} {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(1turn);
  }
}
